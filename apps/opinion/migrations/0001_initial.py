# Generated by Django 4.2.6 on 2023-10-17 10:55

import ckeditor_uploader.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('slug', models.SlugField(blank=True, verbose_name='Slug')),
                ('icon', models.FileField(upload_to='opinion/icons/', verbose_name='Icon')),
            ],
            options={
                'verbose_name': 'Opinion Category',
                'verbose_name_plural': 'Opinion Categories',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('text', models.TextField(max_length=400, verbose_name='Text')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('image', models.ImageField(blank=True, null=True, upload_to='opinion/comments/', verbose_name='Image')),
            ],
            options={
                'verbose_name': 'Opinion Comment',
                'verbose_name_plural': 'Opinion Comments',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Opinion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('title_uz', models.CharField(max_length=255, null=True, verbose_name='Title')),
                ('title_ru', models.CharField(max_length=255, null=True, verbose_name='Title')),
                ('title_en', models.CharField(max_length=255, null=True, verbose_name='Title')),
                ('slug', models.SlugField(blank=True, verbose_name='Slug')),
                ('subtitle', models.CharField(max_length=255, verbose_name='Subtitle')),
                ('subtitle_uz', models.CharField(max_length=255, null=True, verbose_name='Subtitle')),
                ('subtitle_ru', models.CharField(max_length=255, null=True, verbose_name='Subtitle')),
                ('subtitle_en', models.CharField(max_length=255, null=True, verbose_name='Subtitle')),
                ('body', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Body')),
                ('body_uz', ckeditor_uploader.fields.RichTextUploadingField(null=True, verbose_name='Body')),
                ('body_ru', ckeditor_uploader.fields.RichTextUploadingField(null=True, verbose_name='Body')),
                ('body_en', ckeditor_uploader.fields.RichTextUploadingField(null=True, verbose_name='Body')),
                ('status', models.CharField(choices=[('dr', 'Draft'), ('im', 'In moderation'), ('pb', 'Published')], max_length=2, verbose_name='Status')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='opinions', to='users.profile', verbose_name='Author')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opinions', to='opinion.category', verbose_name='Category')),
                ('tags', models.ManyToManyField(related_name='opinions', to='opinion.tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'Opinion',
                'verbose_name_plural': 'Opinions',
            },
        ),
        migrations.CreateModel(
            name='CommentComplaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('text', models.TextField(max_length=400, verbose_name='Text')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complaints', to='opinion.comment', verbose_name='Comment')),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='opinion_comment_complaints', to='users.profile', verbose_name='Owner')),
            ],
            options={
                'verbose_name': 'Opinion Comment Complaint',
                'verbose_name_plural': 'Opinion Comment Complaints',
            },
        ),
        migrations.AddField(
            model_name='comment',
            name='opinion',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='opinion.opinion', verbose_name='Opinion'),
        ),
        migrations.AddField(
            model_name='comment',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replies', to='opinion.comment', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='comment',
            name='profile',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='opinion_comments', to='users.profile', verbose_name='Owner'),
        ),
    ]
